# File sensibili
descrizione.md
progress.md
data/auth.json
data/credentials.json

# Cache Python
__pycache__/
*.py[cod]
*$py.class

# Distribuzione / packaging
dist/
build/
*.egg-info/
*.egg
*.spec

# Eseguibili e binari
*.exe
*.dll
*.so
*.dylib
*.pyd

# Ambiente virtuale
venv/
env/
.venv/
ENV/

# IDE
.vscode/
.idea/
*.swp
*.swo
.cursor/

# File di sistema
.DS_Store
Thumbs.db

# File di ambiente e configurazione
.env
*.key
*.pem

# File di dati sensibili
data/*.json
!data/example.json

# File temporanei
*.log
*.tmp
*.bak
*.old

# File di cache e test
.pytest_cache/
.coverage
.tox/
.nox/
htmlcov/

# File di documentazione generati
docs/_build/
site/

# Documentazione e layout UI
PsWLayout.md

# File di build PyInstaller
*.manifest
*.spec
*.pyz
*.pyzw

# File di debug
*.log
*.pid
*.seed
*.pid.lock

# File di configurazione locale
*.local
*.local.*

# File di backup
*.bak
*.backup
*~

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
dist/
downloads/
eggs/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Usually these files are created by PyInstaller in A). the top-level directory
# B). in a directory called specpath
# C). in a directory called distpath
# E.g. PyInstaller --onefile --specpath top-level --distpath ./dist
# https://pyinstaller.org/en/stable/spec-files.html
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot
*.po

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile* in version control:
# Pipfile.lock

# PEP 582; used by PDM, PEP 582 compatible tools and startupmechanism
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython cache files
cython_debug/

# VS Code
.vscode/

# PsW Specific
data/pswcursor_data.db
data/pswcursor_data.db-journal # SQLite journal file
# Icon and UI files (if not meant to be tracked)
*.ico
PswLayout.md # Assuming this is a design doc not needed in repo
# Log files if any are generated
*.log 